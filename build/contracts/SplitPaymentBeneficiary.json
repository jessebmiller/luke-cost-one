{
  "contractName": "SplitPaymentBeneficiary",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "payees",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "released",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "shares",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "licenseContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalReleased",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "payees",
          "type": "address[]"
        },
        {
          "name": "shares",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_licenseContractAddress",
          "type": "address"
        }
      ],
      "name": "setLicenseContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newAssessedValue",
          "type": "uint256"
        }
      ],
      "name": "assessValue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260008055600060015534801561001957600080fd5b50604051610f71380380610f718339810180604052810190808051820192919060200180518201929190505050818160008151835114151561005a57600080fd5b600090505b82518110156100bc576100af838281518110151561007957fe5b90602001906020020151838381518110151561009157fe5b90602001906020020151610107640100000000026401000000009004565b808060010191505061005f565b50505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610292565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561014357600080fd5b60008111151561015257600080fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415156101a057600080fd5b60048290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061026c8160005461027664010000000002610b25179091906401000000009004565b6000819055505050565b6000818301905082811015151561028957fe5b80905092915050565b610cd0806102a16000396000f3006080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632e1a7d4d146100c757806335c80a1b146100f45780633a98ef39146101215780634e71d92d1461014c57806363037b0c14610163578063715018a6146101d05780638da5cb5b146101e75780639852595c1461023e5780639ae3aff814610295578063ce7c2ac2146102d8578063e2c52b9d1461032f578063e33b7de314610386578063f2fde38b146103b1575b005b3480156100d357600080fd5b506100f2600480360381019080803590602001909291905050506103f4565b005b34801561010057600080fd5b5061011f600480360381019080803590602001909291905050506104a0565b005b34801561012d57600080fd5b506101366105a8565b6040518082815260200191505060405180910390f35b34801561015857600080fd5b506101616105ae565b005b34801561016f57600080fd5b5061018e6004803603810190808035906020019092919050505061081d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101dc57600080fd5b506101e561085b565b005b3480156101f357600080fd5b506101fc610960565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561024a57600080fd5b5061027f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610986565b6040518082815260200191505060405180910390f35b3480156102a157600080fd5b506102d6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061099e565b005b3480156102e457600080fd5b50610319600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a79565b6040518082815260200191505060405180910390f35b34801561033b57600080fd5b50610344610a91565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039257600080fd5b5061039b610ab7565b6040518082815260200191505060405180910390f35b3480156103bd57600080fd5b506103f2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610abd565b005b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b15801561048557600080fd5b505af1158015610499573d6000803e3d6000fd5b5050505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104fc57600080fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166335c80a1b826040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b15801561058d57600080fd5b505af11580156105a1573d6000803e3d6000fd5b5050505050565b60005481565b60008060003392506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411151561060457600080fd5b6106306001543073ffffffffffffffffffffffffffffffffffffffff1631610b2590919063ffffffff16565b91506106e9600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106db6000546106cd600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205487610b4190919063ffffffff16565b610b7990919063ffffffff16565b610b8f90919063ffffffff16565b9050600081141515156106fb57600080fd5b803073ffffffffffffffffffffffffffffffffffffffff16311015151561072157600080fd5b61077381600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2590919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107cb81600154610b2590919063ffffffff16565b6001819055508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610817573d6000803e3d6000fd5b50505050565b60048181548110151561082c57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108b757600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090505481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109fa57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515610a3557600080fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60026020528060005260406000206000915090505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b1957600080fd5b610b2281610ba8565b50565b60008183019050828110151515610b3857fe5b80905092915050565b600080831415610b545760009050610b73565b8183029050818382811515610b6557fe5b04141515610b6f57fe5b8090505b92915050565b60008183811515610b8657fe5b04905092915050565b6000828211151515610b9d57fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610be457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820a6c6e3bb019ac7ac3bf6f412329959770042c94780d03654e07b78c0508eff2b0029",
  "deployedBytecode": "0x6080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632e1a7d4d146100c757806335c80a1b146100f45780633a98ef39146101215780634e71d92d1461014c57806363037b0c14610163578063715018a6146101d05780638da5cb5b146101e75780639852595c1461023e5780639ae3aff814610295578063ce7c2ac2146102d8578063e2c52b9d1461032f578063e33b7de314610386578063f2fde38b146103b1575b005b3480156100d357600080fd5b506100f2600480360381019080803590602001909291905050506103f4565b005b34801561010057600080fd5b5061011f600480360381019080803590602001909291905050506104a0565b005b34801561012d57600080fd5b506101366105a8565b6040518082815260200191505060405180910390f35b34801561015857600080fd5b506101616105ae565b005b34801561016f57600080fd5b5061018e6004803603810190808035906020019092919050505061081d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101dc57600080fd5b506101e561085b565b005b3480156101f357600080fd5b506101fc610960565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561024a57600080fd5b5061027f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610986565b6040518082815260200191505060405180910390f35b3480156102a157600080fd5b506102d6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061099e565b005b3480156102e457600080fd5b50610319600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a79565b6040518082815260200191505060405180910390f35b34801561033b57600080fd5b50610344610a91565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039257600080fd5b5061039b610ab7565b6040518082815260200191505060405180910390f35b3480156103bd57600080fd5b506103f2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610abd565b005b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b15801561048557600080fd5b505af1158015610499573d6000803e3d6000fd5b5050505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104fc57600080fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166335c80a1b826040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b15801561058d57600080fd5b505af11580156105a1573d6000803e3d6000fd5b5050505050565b60005481565b60008060003392506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411151561060457600080fd5b6106306001543073ffffffffffffffffffffffffffffffffffffffff1631610b2590919063ffffffff16565b91506106e9600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106db6000546106cd600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205487610b4190919063ffffffff16565b610b7990919063ffffffff16565b610b8f90919063ffffffff16565b9050600081141515156106fb57600080fd5b803073ffffffffffffffffffffffffffffffffffffffff16311015151561072157600080fd5b61077381600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2590919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107cb81600154610b2590919063ffffffff16565b6001819055508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610817573d6000803e3d6000fd5b50505050565b60048181548110151561082c57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108b757600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090505481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109fa57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515610a3557600080fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60026020528060005260406000206000915090505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b1957600080fd5b610b2281610ba8565b50565b60008183019050828110151515610b3857fe5b80905092915050565b600080831415610b545760009050610b73565b8183029050818382811515610b6557fe5b04141515610b6f57fe5b8090505b92915050565b60008183811515610b8657fe5b04905092915050565b6000828211151515610b9d57fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610be457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820a6c6e3bb019ac7ac3bf6f412329959770042c94780d03654e07b78c0508eff2b0029",
  "sourceMap": "186:623:1:-;;;306:1:4;277:30;;342:1;311:32;;288:110:1;8:9:-1;5:2;;;30:1;27;20:12;5:2;288:110:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;363:6;371;626:9:4;599:7;:14;581:7;:14;:32;573:41;;;;;;;;638:1;626:13;;621:92;645:7;:14;641:1;:18;621:92;;;674:32;683:7;691:1;683:10;;;;;;;;;;;;;;;;;;695:7;703:1;695:10;;;;;;;;;;;;;;;;;;674:8;;;:32;;;:::i;:::-;661:3;;;;;;;621:92;;;502:215;;;575:10:3;567:5;;:18;;;;;;;;;;;;;;;;;;288:110:1;;186:623;;1519:260:4;1611:1;1593:20;;:6;:20;;;;1585:29;;;;;;;;1638:1;1628:7;:11;1620:20;;;;;;;;1672:1;1654:6;:14;1661:6;1654:14;;;;;;;;;;;;;;;;:19;1646:28;;;;;;;;1681:6;1693;1681:19;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1681:19:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1723:7;1706:6;:14;1713:6;1706:14;;;;;;;;;;;;;;;:24;;;;1750;1766:7;1750:11;;:15;;;;;;:24;;;;;:::i;:::-;1736:11;:38;;;;1519:260;;:::o;1238:128:2:-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;186:623:1:-;;;;;;;",
  "deployedSourceMap": "186:623:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;601:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;601:83:1;;;;;;;;;;;;;;;;;;;;;;;;;;688:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;688:119:1;;;;;;;;;;;;;;;;;;;;;;;;;;277:30:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;277:30:4;;;;;;;;;;;;;;;;;;;;;;;850:497;;8:9:-1;5:2;;;30:1;27;20:12;5:2;850:497:4;;;;;;440:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;440:23:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:3;;;;;;238:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;393:43:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;393:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;402:195:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;402:195:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;348:41:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;348:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;249:34:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;249:34:1;;;;;;;;;;;;;;;;;;;;;;;;;;;311:32:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;311:32:4;;;;;;;;;;;;;;;;;;;;;;;1274:103:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;601:83:1;646:15;;;;;;;;;;;:24;;;671:7;646:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;646:33:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;646:33:1;;;;601:83;:::o;688:119::-;719:5:3;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;756:15:1;;;;;;;;;;;:27;;;784:17;756:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;756:46:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;756:46:1;;;;688:119;:::o;277:30:4:-;;;;:::o;850:497::-;880:13;946:21;1016:15;896:10;880:26;;937:1;921:6;:13;928:5;921:13;;;;;;;;;;;;;;;;:17;913:26;;;;;;;;970:40;996:13;;978:4;970:21;;;:25;;:40;;;;:::i;:::-;946:64;;1034:102;1115:8;:15;1124:5;1115:15;;;;;;;;;;;;;;;;1034:65;1087:11;;1034:39;1059:6;:13;1066:5;1059:13;;;;;;;;;;;;;;;;1034;:17;;:39;;;;:::i;:::-;:43;;:65;;;;:::i;:::-;:69;;:102;;;;:::i;:::-;1016:120;;1162:1;1151:7;:12;;1143:21;;;;;;;;1203:7;1186:4;1178:21;;;:32;;1170:41;;;;;;;;1236:28;1256:7;1236:8;:15;1245:5;1236:15;;;;;;;;;;;;;;;;:19;;:28;;;;:::i;:::-;1218:8;:15;1227:5;1218:15;;;;;;;;;;;;;;;:46;;;;1286:26;1304:7;1286:13;;:17;;:26;;;;:::i;:::-;1270:13;:42;;;;1319:5;:14;;:23;1334:7;1319:23;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1319:23:4;850:497;;;:::o;440:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1001:111:3:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;238:20::-;;;;;;;;;;;;;:::o;393:43:4:-;;;;;;;;;;;;;;;;;:::o;402:195:1:-;719:5:3;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;529:1:1;494:37;;:23;:37;;;486:46;;;;;;;;568:23;538:15;;:54;;;;;;;;;;;;;;;;;;402:195;:::o;348:41:4:-;;;;;;;;;;;;;;;;;:::o;249:34:1:-;;;;;;;;;;;;;:::o;311:32:4:-;;;;:::o;1274:103:3:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;1238:128:2:-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;203:380::-;263:9;495:1;489:2;:7;485:36;;;513:1;506:8;;;;485:36;536:2;531;:7;527:11;;561:2;555;551:1;:6;;;;;;;;:12;544:20;;;;;;577:1;570:8;;203:380;;;;;:::o;665:283::-;725:7;941:2;936;:7;;;;;;;;929:14;;665:283;;;;:::o;1060:116::-;1120:7;1148:2;1142;:8;;1135:16;;;;;;1169:2;1164;:7;1157:14;;1060:116;;;;:::o;1512:171:3:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o",
  "source": "pragma solidity ^0.4.22;\n\nimport 'openzeppelin-solidity/contracts/payment/SplitPayment.sol';\nimport 'openzeppelin-solidity/contracts/ownership/Ownable.sol';\nimport './COSTLicense.sol';\n\ncontract SplitPaymentBeneficiary is SplitPayment, Ownable {\n\n  COSTLicense public licenseContract;\n\n  constructor(address[] payees,\n              uint256[] shares) SplitPayment(payees, shares) Ownable() public {}\n\n  function setLicenseContract(address _licenseContractAddress) public onlyOwner {\n    require(_licenseContractAddress == address(0));\n    licenseContract = COSTLicense(_licenseContractAddress);\n  }\n\n  function withdraw(uint _amount) public {\n    licenseContract.withdraw(_amount);\n  }\n\n  function assessValue(uint _newAssessedValue) public onlyOwner {\n    licenseContract.assessValue(_newAssessedValue);\n  }\n}\n",
  "sourcePath": "/Users/jesse/projects/luke-cost-one/contracts/SplitPaymentBeneficiary.sol",
  "ast": {
    "absolutePath": "/Users/jesse/projects/luke-cost-one/contracts/SplitPaymentBeneficiary.sol",
    "exportedSymbols": {
      "SplitPaymentBeneficiary": [
        376
      ]
    },
    "id": 377,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 302,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".22"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/payment/SplitPayment.sol",
        "file": "openzeppelin-solidity/contracts/payment/SplitPayment.sol",
        "id": 303,
        "nodeType": "ImportDirective",
        "scope": 377,
        "sourceUnit": 757,
        "src": "26:66:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 304,
        "nodeType": "ImportDirective",
        "scope": 377,
        "sourceUnit": 557,
        "src": "93:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jesse/projects/luke-cost-one/contracts/COSTLicense.sol",
        "file": "./COSTLicense.sol",
        "id": 305,
        "nodeType": "ImportDirective",
        "scope": 377,
        "sourceUnit": 301,
        "src": "157:27:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 306,
              "name": "SplitPayment",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 756,
              "src": "222:12:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SplitPayment_$756",
                "typeString": "contract SplitPayment"
              }
            },
            "id": 307,
            "nodeType": "InheritanceSpecifier",
            "src": "222:12:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 308,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 556,
              "src": "236:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$556",
                "typeString": "contract Ownable"
              }
            },
            "id": 309,
            "nodeType": "InheritanceSpecifier",
            "src": "236:7:1"
          }
        ],
        "contractDependencies": [
          556,
          756
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 376,
        "linearizedBaseContracts": [
          376,
          556,
          756
        ],
        "name": "SplitPaymentBeneficiary",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 311,
            "name": "licenseContract",
            "nodeType": "VariableDeclaration",
            "scope": 376,
            "src": "249:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_COSTLicense_$300",
              "typeString": "contract COSTLicense"
            },
            "typeName": {
              "contractScope": null,
              "id": 310,
              "name": "COSTLicense",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 300,
              "src": "249:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_COSTLicense_$300",
                "typeString": "contract COSTLicense"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 326,
              "nodeType": "Block",
              "src": "396:2:1",
              "statements": []
            },
            "documentation": null,
            "id": 327,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 320,
                    "name": "payees",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 314,
                    "src": "363:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 321,
                    "name": "shares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 317,
                    "src": "371:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  }
                ],
                "id": 322,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 319,
                  "name": "SplitPayment",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 756,
                  "src": "350:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_SplitPayment_$756_$",
                    "typeString": "type(contract SplitPayment)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "350:28:1"
              },
              {
                "arguments": [],
                "id": 324,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 323,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 556,
                  "src": "379:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$556_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "379:9:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "name": "payees",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "300:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 312,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "300:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 313,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "300:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 317,
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "332:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 315,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "332:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 316,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "332:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "299:50:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:0:1"
            },
            "scope": 376,
            "src": "288:110:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "480:117:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 335,
                          "name": "_licenseContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 329,
                          "src": "494:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "529:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "521:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "521:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "494:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        774,
                        775
                      ],
                      "referencedDeclaration": 774,
                      "src": "486:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "486:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "486:46:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 342,
                      "name": "licenseContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "538:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_COSTLicense_$300",
                        "typeString": "contract COSTLicense"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 344,
                          "name": "_licenseContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 329,
                          "src": "568:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 343,
                        "name": "COSTLicense",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "556:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_COSTLicense_$300_$",
                          "typeString": "type(contract COSTLicense)"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "556:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_COSTLicense_$300",
                        "typeString": "contract COSTLicense"
                      }
                    },
                    "src": "538:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_COSTLicense_$300",
                      "typeString": "contract COSTLicense"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "538:54:1"
                }
              ]
            },
            "documentation": null,
            "id": 349,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 332,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 331,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 504,
                  "src": "470:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "470:9:1"
              }
            ],
            "name": "setLicenseContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 329,
                  "name": "_licenseContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "430:31:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "430:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "429:33:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "480:0:1"
            },
            "scope": 376,
            "src": "402:195:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 360,
              "nodeType": "Block",
              "src": "640:44:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 357,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "671:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 354,
                        "name": "licenseContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "646:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_COSTLicense_$300",
                          "typeString": "contract COSTLicense"
                        }
                      },
                      "id": 356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 275,
                      "src": "646:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "646:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "646:33:1"
                }
              ]
            },
            "documentation": null,
            "id": 361,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 361,
                  "src": "619:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "618:14:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "640:0:1"
            },
            "scope": 376,
            "src": "601:83:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 374,
              "nodeType": "Block",
              "src": "750:57:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 371,
                        "name": "_newAssessedValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 363,
                        "src": "784:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 368,
                        "name": "licenseContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "756:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_COSTLicense_$300",
                          "typeString": "contract COSTLicense"
                        }
                      },
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assessValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 159,
                      "src": "756:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "756:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "756:46:1"
                }
              ]
            },
            "documentation": null,
            "id": 375,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 366,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 365,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 504,
                  "src": "740:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "740:9:1"
              }
            ],
            "name": "assessValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 363,
                  "name": "_newAssessedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "709:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 362,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "709:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "708:24:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "750:0:1"
            },
            "scope": 376,
            "src": "688:119:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 377,
        "src": "186:623:1"
      }
    ],
    "src": "0:810:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/jesse/projects/luke-cost-one/contracts/SplitPaymentBeneficiary.sol",
    "exportedSymbols": {
      "SplitPaymentBeneficiary": [
        376
      ]
    },
    "id": 377,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 302,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".22"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/payment/SplitPayment.sol",
        "file": "openzeppelin-solidity/contracts/payment/SplitPayment.sol",
        "id": 303,
        "nodeType": "ImportDirective",
        "scope": 377,
        "sourceUnit": 757,
        "src": "26:66:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 304,
        "nodeType": "ImportDirective",
        "scope": 377,
        "sourceUnit": 557,
        "src": "93:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jesse/projects/luke-cost-one/contracts/COSTLicense.sol",
        "file": "./COSTLicense.sol",
        "id": 305,
        "nodeType": "ImportDirective",
        "scope": 377,
        "sourceUnit": 301,
        "src": "157:27:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 306,
              "name": "SplitPayment",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 756,
              "src": "222:12:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SplitPayment_$756",
                "typeString": "contract SplitPayment"
              }
            },
            "id": 307,
            "nodeType": "InheritanceSpecifier",
            "src": "222:12:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 308,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 556,
              "src": "236:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$556",
                "typeString": "contract Ownable"
              }
            },
            "id": 309,
            "nodeType": "InheritanceSpecifier",
            "src": "236:7:1"
          }
        ],
        "contractDependencies": [
          556,
          756
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 376,
        "linearizedBaseContracts": [
          376,
          556,
          756
        ],
        "name": "SplitPaymentBeneficiary",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 311,
            "name": "licenseContract",
            "nodeType": "VariableDeclaration",
            "scope": 376,
            "src": "249:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_COSTLicense_$300",
              "typeString": "contract COSTLicense"
            },
            "typeName": {
              "contractScope": null,
              "id": 310,
              "name": "COSTLicense",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 300,
              "src": "249:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_COSTLicense_$300",
                "typeString": "contract COSTLicense"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 326,
              "nodeType": "Block",
              "src": "396:2:1",
              "statements": []
            },
            "documentation": null,
            "id": 327,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 320,
                    "name": "payees",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 314,
                    "src": "363:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 321,
                    "name": "shares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 317,
                    "src": "371:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  }
                ],
                "id": 322,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 319,
                  "name": "SplitPayment",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 756,
                  "src": "350:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_SplitPayment_$756_$",
                    "typeString": "type(contract SplitPayment)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "350:28:1"
              },
              {
                "arguments": [],
                "id": 324,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 323,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 556,
                  "src": "379:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$556_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "379:9:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "name": "payees",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "300:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 312,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "300:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 313,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "300:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 317,
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "332:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 315,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "332:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 316,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "332:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "299:50:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:0:1"
            },
            "scope": 376,
            "src": "288:110:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "480:117:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 335,
                          "name": "_licenseContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 329,
                          "src": "494:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "529:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "521:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "521:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "494:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        774,
                        775
                      ],
                      "referencedDeclaration": 774,
                      "src": "486:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "486:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "486:46:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 342,
                      "name": "licenseContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "538:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_COSTLicense_$300",
                        "typeString": "contract COSTLicense"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 344,
                          "name": "_licenseContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 329,
                          "src": "568:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 343,
                        "name": "COSTLicense",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "556:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_COSTLicense_$300_$",
                          "typeString": "type(contract COSTLicense)"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "556:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_COSTLicense_$300",
                        "typeString": "contract COSTLicense"
                      }
                    },
                    "src": "538:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_COSTLicense_$300",
                      "typeString": "contract COSTLicense"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "538:54:1"
                }
              ]
            },
            "documentation": null,
            "id": 349,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 332,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 331,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 504,
                  "src": "470:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "470:9:1"
              }
            ],
            "name": "setLicenseContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 329,
                  "name": "_licenseContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "430:31:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "430:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "429:33:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "480:0:1"
            },
            "scope": 376,
            "src": "402:195:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 360,
              "nodeType": "Block",
              "src": "640:44:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 357,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "671:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 354,
                        "name": "licenseContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "646:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_COSTLicense_$300",
                          "typeString": "contract COSTLicense"
                        }
                      },
                      "id": 356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 275,
                      "src": "646:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "646:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "646:33:1"
                }
              ]
            },
            "documentation": null,
            "id": 361,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 361,
                  "src": "619:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "618:14:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "640:0:1"
            },
            "scope": 376,
            "src": "601:83:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 374,
              "nodeType": "Block",
              "src": "750:57:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 371,
                        "name": "_newAssessedValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 363,
                        "src": "784:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 368,
                        "name": "licenseContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "756:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_COSTLicense_$300",
                          "typeString": "contract COSTLicense"
                        }
                      },
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assessValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 159,
                      "src": "756:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "756:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "756:46:1"
                }
              ]
            },
            "documentation": null,
            "id": 375,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 366,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 365,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 504,
                  "src": "740:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "740:9:1"
              }
            ],
            "name": "assessValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 363,
                  "name": "_newAssessedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "709:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 362,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "709:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "708:24:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "750:0:1"
            },
            "scope": 376,
            "src": "688:119:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 377,
        "src": "186:623:1"
      }
    ],
    "src": "0:810:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "1538348835424": {
      "events": {},
      "links": {},
      "address": "0x4fdaaea73c268b157dfdfae25b54c0e3d8ed6727",
      "transactionHash": "0xfd9894a0e59fdbafda204232c044128ca417be7702435d1698ed451090c54067"
    },
    "1538349816246": {
      "events": {},
      "links": {},
      "address": "0x163054aab2744d6ed79f98e217f3b2ecdf4a37c0",
      "transactionHash": "0x28c6a77d9f9250d6c2af2ac308684447889780d5d5bb2e07aec2b7f7324cff01"
    },
    "1538512952583": {
      "events": {},
      "links": {},
      "address": "0x4e961f758355420e1476ee3429a87435e1c51c1f",
      "transactionHash": "0x3503563c06d7e987f1a2321ba04b0c9661b43390148beb7539577eba52541ba1"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-06T20:35:34.181Z"
}